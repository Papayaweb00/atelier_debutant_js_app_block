document.addEventListener('DOMContentLoaded', () => {
    const modeToggle = document.getElementById('mode-toggle');
    const hamburgerButton = document.getElementById('hamburger-button');
    const navLinks = document.getElementById('nav-links');
    const content = document.getElementById('content');

    // Initialiser le mode clair/sombre
    modeToggle.addEventListener('click', () => {
        document.body.classList.toggle('dark-mode');
        document.body.classList.toggle('light-mode');
    });

    // Initialiser le menu hamburger
    hamburgerButton.addEventListener('click', () => {
        navLinks.classList.toggle('active');
    });

    // Fonction pour ajouter un article
    document.getElementById('add-article').addEventListener('click', () => {
        const article = prompt('Entrez le contenu de l\'article:');
        if (article) {
            const articleElement = document.createElement('div');
            articleElement.innerHTML = `<p>${article}</p>
                                        <button class="edit-article">Modifier</button>
                                        <button class="delete-article">Supprimer</button>`;
            content.appendChild(articleElement);

            // Ajouter les événements pour modifier et supprimer
            articleElement.querySelector('.edit-article').addEventListener('click', () => {
                const newContent = prompt('Modifier l\'article:', article);
                if (newContent) {
                    articleElement.querySelector('p').textContent = newContent;
                }
            });

            articleElement.querySelector('.delete-article').addEventListener('click', () => {
                content.removeChild(articleElement);
            });
        }
    });
});




// Appel des elements avec le DOM
let titreArticle = document.querySelector('#titre');

let contenteArticle = document.querySelector('#content');

let formulaire = document.querySelector('#form');
let btnsubmit = document.querySelector('#submit');

// Ajout des messages d'erreurs
function showerror(input, message) {
    const errorSpan = document.createElement('span');
    errorSpan.className = 'error';
    errorSpan.innerText = message;
    input.parentElement.appendChild(errorSpan);
}

// Suppression des messages d'erreurs
function clearerror() {
    const errorSpans = document.querySelectorAll('.error');
    errorSpans.forEach(span => span.remove());
}

// div qui regle le contenue du blog
function blogcreate(titre, content) {
    // const divform = create('div', blog, `div_content`);

    // console.log(divform);
    // const imgform = create('div', divform, `form_img`);
    // const titreform = create('h2', divform, 'titre', titre);
    // const contentform = create('p', divform, 'text', content);
    // date
    const datecre = new Date();
    const dateform = datecre.toLocaleDateString();
    // enregitre
    // const date = create('h3', divform, 'date', dateform);

    blogContent.push({
        'name': titre,
        'body': content,
        'date': dateform
    })
    console.log(blogContent);
    // localStorage.setItem('blogContent', JSON.stringify(blogContent));

    // boucle pour afficher les elements
    for (let i = 0; i < blogContent.length; i++) {
        // Creation des div
        // -----div container
        const divform = create('div', blog, `div_content`);
        localStorage.setItem('form', JSON.stringify(divform));

        // -----div remplace image
        const div2 = create('div', divform, `form_img`);

        // -----div content text
        const div3 = create('div', divform, `div_content_v`);

        // ____titre article
        const h2 = create('h2', div3, `titre`, blogContent[i].name);
        // ____paragraphe article
        const p = create('p', div3, 'text', blogContent[i].body);
        // ____date article
        const date = create('h3', div3, 'date', blogContent[i].date);
        // ____div content btn
        const contentbtn = create('div', div3, 'content_btn');
        // _______btn modifier article_______
        const btn = create('button', contentbtn, 'modif', 'Modifier');
        // _______btn suppr article
        const btn2 = create('button', contentbtn, 'suppr', 'Supprimer');

        // ecouteur d'evenement pour supprimer
        btn2.addEventListener('click', (e) => {
            // accés à l'élément DOM 
            // qui a déclenché un événement
            const clickedButton = e.target;
            //acces a l'ancêtre le plus proche de l'élément
            const clickedDivContent = clickedButton.closest('.div_content');
            // Ajout class
            clickedDivContent.classList.add('supprimer');
            // sauvegarde avec localStorage()
            localStorage.setItem(`btn2-${i}`, 'supprimer');
        })

        // fonction pour regler sauvegarde de suppression
        function supprdiv_content(a, b, index) {
            //recuperation de la valeur stocke
            const savebtn = localStorage.getItem(`btn2-${index}`);

            // condition sauvegarde
            if (savebtn === 'supprimer') {
                // ajout class
                a.classList.add(b);
            } else {
                // supprime class
                a.classList.remove(b);
            }
            return a;
        }
        // Appel fonction
        supprdiv_content(divform, 'supprimer', i);

        // ecouteur d'evenement pour modifier le text
        btn.addEventListener('click', (e) => {
            // accés à l'élément DOM 
            // qui a déclenché un événement
            const click = e.target;
            //acces a l'ancêtre le plus proche de l'élément
            const clickdiv = click.closest('.div_content');
            // modification text
            let modiftext = prompt('Mettez vos modifications.\nNB: Si vous ecrivez un mot cela va remplacer le texte deja ecrit.');
            // Ajout text et class
            if (modiftext) {
                // Ajout text
                p.innerText = modiftext;
                // Ajout class
                p.classList.add('modifier');
                // Sauvegarde
                localStorage.setItem(`modiftext${i}`, modiftext)
                localStorage.setItem(`btn-${i}`, 'modifier');
            }
        })

        // fonction pour regler sauvegarde de modification
        function modif_divContent(r, t, index2) {
            //recuperation de la valeur stocke
            const modif = localStorage.getItem(`btn-${index2}`);

            // condition sauvegarde
            if (modif === 'modifier') {
                // Ajout class
                r.classList.add(t);
                //recuperation de la deuxieme valeur stocke
                const savedtext = localStorage.getItem(`modiftext${index2}`);
                // Ajout text
                if (savedtext) {
                    r.innerText = savedtext;
                }
            } else {
                // supprime class
                r.classList.remove(t);
            }
            return r;
        }

        // Appel function de sauvgarde modif
        modif_divContent(p, 'modifier', i);
    }

    // // ____div content btn
    // const contentbtnform = create('div', divform, 'content_btn');
    // // _______btn modifier article_______
    // const btnform = create('button', contentbtnform, 'modif', 'Modifier');
    // // _______btn suppr article
    // const btnform2 = create('button', contentbtnform, 'suppr', 'Supprimer');
    // // ecouteur d'evenement pour supprimer
    // btnform2.addEventListener('click', (e) => {
    //     localStorage.removeItem('form');
    //     localStorage.removeItem('titre');
    //     localStorage.removeItem('content');
    //     // accés à l'élément DOM 
    //     // qui a déclenché un événement
    //     const clickedButton = e.target;
    //     //acces a l'ancêtre le plus proche de l'élément
    //     const clickedDivContent = clickedButton.closest('.div_content');
    //     // Ajout class
    //     clickedDivContent.classList.add('supprimer');
    //     // sauvegarde avec localStorage()
    //     localStorage.setItem(`btnform2`, 'supprimer');
    // })


    // // fonction pour regler sauvegarde de suppression
    // function supprdiv_content2(a, b, index) {
    //     //recuperation de la valeur stocke
    //     const savebtnform = localStorage.getItem(`btnform2-${index}`);
    //     // condition sauvegarde
    //     if (savebtnform === 'supprimer') {
    //         // ajout class
    //         a.classList.add(b);
    //     } else {
    //         // supprime class
    //         a.classList.remove(b);
    //     }
    //     return a;
    // }

    // supprdiv_content2(divform, 'supprimer');

    // btnform.addEventListener('click', (e) => {
    //     // accés à l'élément DOM 
    //     // qui a déclenché un événement
    //     const click = e.target;
    //     //acces a l'ancêtre le plus proche de l'élément
    //     const clickdiv = click.closest('.div_content');
    //     // modification text
    //     let modiftext = prompt('Mettez vos modifications.\nNB: Si vous ecrivez un mot cela va remplacer le texte deja ecrit.');
    //     // Ajout text et class
    //     if (modiftext) {
    //         // Ajout text
    //         contentform.innerText = modiftext;
    //         // Ajout class
    //         contentform.classList.add('modifier');
    //         // Sauvegarde
    //         localStorage.setItem(`modiftext`, modiftext)
    //         localStorage.setItem(`btnform`, 'modifier');
    //     }
    // })

    // function modif_divContent2(r, t, index2) {
    //     //recuperation de la valeur stocke
    //     const modiform = localStorage.getItem(`btnform-${index2}`);
    //     // condition sauvegarde
    //     if (modiform === 'modifier') {
    //         // Ajout class
    //         r.classList.add(t);
    //         //recuperation de la deuxieme valeur stocke
    //         const savedtextform = localStorage.getItem(`modiftext`);
    //         // Ajout text
    //         if (savedtextform) {
    //             r.innerText = savedtextform;
    //         }
    //     } else {
    //         // supprime class
    //         r.classList.remove(t);
    //     }
    //     return r;
    // }

    // modif_divContent2(contentform, 'modifier');
}

formulaire.addEventListener('submit', (e) => {
    clearerror();

    let isvalid = true;

    if (titreArticle.value.trim() === '') {
        isvalid = false;
        showerror(titreArticle, 'Champ obligatoire');
        titreArticle.style.border = '1px solid red';
        titreArticle.style.boxShadow = "3px 3px 9px red";
    } else {
        titreArticle.style.border = '1px solid green';
        titreArticle.style.boxShadow = "3px 3px 9px green";
        console.log(titreArticle.value);
    }

    if (contenteArticle.value.trim() === '') {
        isvalid = false;
        showerror(contenteArticle, 'Champ obligatoire');
        contenteArticle.style.border = '1px solid red';
        contenteArticle.style.boxShadow = "3px 3px 9px red";
    } else {
        contenteArticle.style.border = '1px solid green';
        contenteArticle.style.boxShadow = "3px 3px 9px green";
        console.log(contenteArticle.value);
    }
    const titre = titreArticle.value;
    const content = contenteArticle.value;

    if (!isvalid) {
        e.preventDefault();
        e.stopPropagation();
    } else {
        blogcreate(titreArticle.value, contenteArticle.value);
        // localStorage.setItem('titre', JSON.stringify(divform));
        // localStorage.setItem('pop', JSON.stringify(divform));
        const fd = new FormData(formulaire);
        console.log(fd);

        const obj = Object.fromEntries(fd);
        console.log(obj);

        const json = JSON.stringify(obj);

        localStorage.setItem('registre', json);
        formulaire.reset();


        // console.log(`Titre: ${titre}\nText: ${content}`);
        let i = 0;

        // localStorage.setItem('titre', titreArticle.value);
        // localStorage.setItem('content', contenteArticle.value);

        contenteArticle.style.border = 'none';
        contenteArticle.style.boxShadow = "none";
        titreArticle.style.border = 'none';
        titreArticle.style.boxShadow = "none";
    }
})

function sauvegarde() {
    // const locform = JSON.parse(localStorage.getItem('form'));
    const locform = JSON.parse(localStorage.getItem('registre'));

    if (locform != null) {
        blogcreate(locform.titre, locform.content);
    }
}

sauvegarde()


